@page "/reports/{Id:long}"
@using DbListener.Dal
@using DbListener.Dal.Entityes
@using Microsoft.EntityFrameworkCore
@inject NavigationManager Navigation
@inject ConnectionDbContext _db

<MudLayout>
    <MudAppBar Color="Color.Primary" Fixed="false">
        <MudSpacer />
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" OnClick="@ToggleDrawer" />
    </MudAppBar>

    <MudDrawer @bind-Open="@_open" Elevation="1" Anchor="Anchor.End">
        <MudDrawerHeader>
            <MudText Typo="Typo.h6">Меню</MudText>
        </MudDrawerHeader>
        <MudNavMenu>
            <MudNavLink Href="/">Добавить соединение</MudNavLink>
            <MudNavLink Href="/connections">Соединения</MudNavLink>
            <MudNavLink Href="/billing">Отслеживание действий</MudNavLink>
            <MudNavLink Href="/code-editor">Редактор кода</MudNavLink>
        </MudNavMenu>
    </MudDrawer>
    <MudMainContent>
        @foreach(var report in _reports)
        {
            <MudButton Size="Size.Large" OnClick="() => GoToReportItems(report)">@report.DateOfLog</MudButton>
        }
    </MudMainContent>
</MudLayout>

@code {
    [Parameter] 
    public long Id { get; set; }

    private List<Report> _reports = [];
    
    private bool _open = false;

    private void ToggleDrawer()
    {
        _open = !_open;
    }

    protected override async Task OnInitializedAsync()
    {
        _reports = await _db.Reports
            .Include(c => c.Connection)
            .Where(r => r.Connection.Id == Id)
            .ToListAsync();
    }

    protected void GoToReportItems(Report report)
    {
        Navigation.NavigateTo($"/reportitems{report.Id}");
    }
}